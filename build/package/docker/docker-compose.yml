services:
  postgres:
    build:
      context: ../../..
      dockerfile: build/package/docker/postgres.Dockerfile
    image: postgres:latest
    container_name: product-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    env_file:
      - ../../../.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      retries: 10
      timeout: 5s
  app:
    image: app:latest
    container_name: product-api-go
    build:
      context: ../../..
      dockerfile: build/package/docker/Dockerfile
    ports:
      - "${APP_PORT}:8080"
    volumes:
      - ./log:/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: on-failure
    env_file:
      - ../../../.env
  redis:
    container_name: product-redis
    image: redis:latest
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
